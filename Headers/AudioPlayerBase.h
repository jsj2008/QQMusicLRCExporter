//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jan  4 2017 14:06:37).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class AudioDataBase, NSString, SingleHourglass, SongInfo, StatInfo;

@interface AudioPlayerBase : NSObject
{
    int playState;
    NSObject *stateLock;
    double duration;
    NSObject *durationLock;
    int err;
    _Bool isPause;
    _Bool bErrCasedByDataSource;
    AudioDataBase *dataSource;
    NSObject *dataSourceLock;
    SingleHourglass *hourglass;
    StatInfo *statInfo;
    _Bool _bFinishByBufferTimeout;
    int playType;
    int _listTagType;
    int _errorCode;
    int _lastPlayState;
    int _lastPrePlayState;
    int _secondCacheCount;
    long long preparingCostTime;
    SongInfo *song;
    unsigned long long iBufferTimesCount;
    unsigned long long iSecondBufferDuration;
    StatInfo *_importantStatInfo;
    NSString *_secondCacheTimes;
    SingleHourglass *_firstBufferHourglass;
    SingleHourglass *_playingHourglass;
    SingleHourglass *_bufferingHourglass;
}

@property(retain) SingleHourglass *bufferingHourglass; // @synthesize bufferingHourglass=_bufferingHourglass;
@property(retain) SingleHourglass *playingHourglass; // @synthesize playingHourglass=_playingHourglass;
@property(retain) SingleHourglass *firstBufferHourglass; // @synthesize firstBufferHourglass=_firstBufferHourglass;
@property(retain) NSString *secondCacheTimes; // @synthesize secondCacheTimes=_secondCacheTimes;
@property int secondCacheCount; // @synthesize secondCacheCount=_secondCacheCount;
@property int lastPrePlayState; // @synthesize lastPrePlayState=_lastPrePlayState;
@property int lastPlayState; // @synthesize lastPlayState=_lastPlayState;
@property int errorCode; // @synthesize errorCode=_errorCode;
@property int listTagType; // @synthesize listTagType=_listTagType;
@property(retain, nonatomic) StatInfo *importantStatInfo; // @synthesize importantStatInfo=_importantStatInfo;
@property(nonatomic) _Bool bFinishByBufferTimeout; // @synthesize bFinishByBufferTimeout=_bFinishByBufferTimeout;
@property _Bool isPause; // @synthesize isPause;
@property unsigned long long iSecondBufferDuration; // @synthesize iSecondBufferDuration;
@property unsigned long long iBufferTimesCount; // @synthesize iBufferTimesCount;
@property(retain) SongInfo *song; // @synthesize song;
@property long long preparingCostTime; // @synthesize preparingCostTime;
@property int playType; // @synthesize playType;
@property(retain, nonatomic) StatInfo *statInfo; // @synthesize statInfo;
@property(retain) AudioDataBase *dataSource; // @synthesize dataSource;
@property _Bool bErrCasedByDataSource; // @synthesize bErrCasedByDataSource;
- (void).cxx_destruct;
- (_Bool)progressUpdateFromSeek;
- (id)generateTimeKey:(struct SFlexInteger)arg1 opTime:(long long)arg2;
- (double)playedTime;
- (void)fadeAudioQueueWithDuration:(double)arg1;
- (void)_checkStatinfoContainBadData;
- (void)statFirstBufferTime;
- (void)setEffect:(int)arg1 withParam:(int)arg2;
@property double duration; // @synthesize duration;
@property(readonly) _Bool isSeeking;
- (double)startPercent;
@property(readonly) double loadingPercent;
@property(readonly) double currentBufferPercent;
@property(readonly) double progress;
- (void)sendListenTimeStatInfo;
@property int playState; // @synthesize playState;
@property int err; // @synthesize err;
- (_Bool)isErr;
- (void)mainThreadStateNotification:(id)arg1;
- (void)setSeekTime:(double)arg1;
- (void)destroy;
- (void)stop;
- (void)resume;
- (void)pauseImmediately:(_Bool)arg1;
- (void)pause;
- (void)play;
- (_Bool)prepareWithDataSource:(id)arg1;
- (id)init;

@end

