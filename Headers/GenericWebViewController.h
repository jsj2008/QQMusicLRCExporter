//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jan  4 2017 14:06:37).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SkinViewController.h"

#import "ImageManagerDelegate-Protocol.h"
#import "QMBulletSendGiftPluginDelegate-Protocol.h"
#import "QMJsMessageDelegate-Protocol.h"
#import "QQJSWebViewProtocol-Protocol.h"
#import "UIActionSheetDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"
#import "UIWebViewDelegate-Protocol.h"

@class BETouchView, CommentInputView, JSResponseCallbackObject, NSDate, NSDictionary, NSMutableDictionary, NSString, NSTimer, OnLineSearchViewController, QMBulletSendGiftPlugin, QMessageInputView, SingleHourglass, UIActivityIndicatorView, UIAlertView, UIButton, UIImageView, UIWebView, WVJBResponseCallbackObject;

@interface GenericWebViewController : SkinViewController <UIActionSheetDelegate, ImageManagerDelegate, UIWebViewDelegate, QMJsMessageDelegate, UITextViewDelegate, QQJSWebViewProtocol, QMBulletSendGiftPluginDelegate>
{
    struct CGRect _viewFrame;
    UIButton *_backwardBtn;
    UIButton *_forwardBtn;
    BETouchView *_bottomBar;
    UIButton *_refreshBtn;
    UIButton *_shareBtn;
    UIButton *_customBtn;
    UIImageView *_redPoint;
    UIActivityIndicatorView *_loadingActivityView;
    NSString *_rightBtnTitle;
    _Bool showPlayAndReturnBtn;
    _Bool _showLeftButton;
    _Bool isLocalHtml;
    NSDate *lastDate;
    _Bool isLoadAgain;
    _Bool slideShow;
    long long pageCount;
    UIAlertView *_alertView;
    _Bool _isWebGoBack;
    _Bool _scrollsToTop;
    _Bool _isHideHeader;
    _Bool _hideMiniPlayer;
    _Bool _isAllowedHideRightBtn;
    _Bool _isHideBottomBar;
    _Bool _useSelfNavigation;
    _Bool _webMediaPlaybackRequiresUserAction;
    _Bool _isForceResetWebViewEdgeInsets;
    _Bool _isTabSubView;
    _Bool _simpleWebview;
    _Bool _notScroll;
    _Bool _notSkinChange;
    _Bool _notRelayout;
    _Bool _notAutoFixFrame;
    _Bool _isChannelRootWeb;
    _Bool _isForceToLoadUrl;
    _Bool _isWebViewDidLoad;
    float visibleTopOffset;
    int _localTimeOut;
    float _specialinfoViewTopOffset;
    int _urlShareType;
    UIWebView *genericWebView;
    id onFinishedCallbackTarget;
    SEL onFinishedCallbackSelector;
    NSString *returnBtnTitle;
    long long lastStatusBarStyle;
    NSMutableDictionary *responseCallbacks;
    NSString *_webPageUrl;
    unsigned long long _webViewType;
    CDUnknownBlockType _genericeWebCallback;
    NSString *_currentFromIDStr;
    OnLineSearchViewController *_onLineSearchVC;
    QMessageInputView *_messageInputView;
    CommentInputView *_commentInputView;
    WVJBResponseCallbackObject *_jsResponseCallback;
    JSResponseCallbackObject *_mClientResponseCallback;
    JSResponseCallbackObject *_mClientActionBtnCallback;
    double _previousTextViewContentHeight;
    NSDictionary *_actionSheetIndexToH5IconDict;
    NSMutableDictionary *_hasSolvedPlayTask;
    QMBulletSendGiftPlugin *_bulletSendGiftPlugin;
    NSDictionary *_mClientShareDic;
    CDUnknownBlockType _navBackCallBackBlock;
    CDUnknownBlockType _navCloseCallBackBlock;
    CDUnknownBlockType _noNetBlock;
    NSString *_noNetButtonTitle;
    long long _visibility;
    NSDictionary *_dictShareData;
    unsigned long long _currentState;
    SingleHourglass *_hourGlass;
    NSTimer *_timeoutTimer;
    NSString *_imgSrc;
    struct UIEdgeInsets _webViewEdgeInsets;
}

@property(nonatomic) int urlShareType; // @synthesize urlShareType=_urlShareType;
@property(retain, nonatomic) NSString *imgSrc; // @synthesize imgSrc=_imgSrc;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) SingleHourglass *hourGlass; // @synthesize hourGlass=_hourGlass;
@property(nonatomic) unsigned long long currentState; // @synthesize currentState=_currentState;
@property(nonatomic) _Bool isWebViewDidLoad; // @synthesize isWebViewDidLoad=_isWebViewDidLoad;
@property(nonatomic) _Bool isForceToLoadUrl; // @synthesize isForceToLoadUrl=_isForceToLoadUrl;
@property(retain, nonatomic) NSDictionary *dictShareData; // @synthesize dictShareData=_dictShareData;
@property(nonatomic) _Bool isChannelRootWeb; // @synthesize isChannelRootWeb=_isChannelRootWeb;
@property(nonatomic) _Bool notAutoFixFrame; // @synthesize notAutoFixFrame=_notAutoFixFrame;
@property(nonatomic) _Bool notRelayout; // @synthesize notRelayout=_notRelayout;
@property(nonatomic) long long visibility; // @synthesize visibility=_visibility;
@property(retain, nonatomic) NSString *noNetButtonTitle; // @synthesize noNetButtonTitle=_noNetButtonTitle;
@property(copy, nonatomic) CDUnknownBlockType noNetBlock; // @synthesize noNetBlock=_noNetBlock;
@property(copy, nonatomic) CDUnknownBlockType navCloseCallBackBlock; // @synthesize navCloseCallBackBlock=_navCloseCallBackBlock;
@property(copy, nonatomic) CDUnknownBlockType navBackCallBackBlock; // @synthesize navBackCallBackBlock=_navBackCallBackBlock;
@property(retain, nonatomic) NSDictionary *mClientShareDic; // @synthesize mClientShareDic=_mClientShareDic;
@property(nonatomic) _Bool notSkinChange; // @synthesize notSkinChange=_notSkinChange;
@property(nonatomic) _Bool notScroll; // @synthesize notScroll=_notScroll;
@property(nonatomic) _Bool simpleWebview; // @synthesize simpleWebview=_simpleWebview;
@property(retain, nonatomic) QMBulletSendGiftPlugin *bulletSendGiftPlugin; // @synthesize bulletSendGiftPlugin=_bulletSendGiftPlugin;
@property(retain, nonatomic) NSMutableDictionary *hasSolvedPlayTask; // @synthesize hasSolvedPlayTask=_hasSolvedPlayTask;
@property(retain, nonatomic) NSDictionary *actionSheetIndexToH5IconDict; // @synthesize actionSheetIndexToH5IconDict=_actionSheetIndexToH5IconDict;
@property(nonatomic) double previousTextViewContentHeight; // @synthesize previousTextViewContentHeight=_previousTextViewContentHeight;
@property(retain, nonatomic) JSResponseCallbackObject *mClientActionBtnCallback; // @synthesize mClientActionBtnCallback=_mClientActionBtnCallback;
@property(retain, nonatomic) JSResponseCallbackObject *mClientResponseCallback; // @synthesize mClientResponseCallback=_mClientResponseCallback;
@property(retain, nonatomic) WVJBResponseCallbackObject *jsResponseCallback; // @synthesize jsResponseCallback=_jsResponseCallback;
@property(retain, nonatomic) CommentInputView *commentInputView; // @synthesize commentInputView=_commentInputView;
@property(retain, nonatomic) QMessageInputView *messageInputView; // @synthesize messageInputView=_messageInputView;
@property(nonatomic) float specialinfoViewTopOffset; // @synthesize specialinfoViewTopOffset=_specialinfoViewTopOffset;
@property(retain) OnLineSearchViewController *onLineSearchVC; // @synthesize onLineSearchVC=_onLineSearchVC;
@property(retain, nonatomic) NSString *currentFromIDStr; // @synthesize currentFromIDStr=_currentFromIDStr;
@property(nonatomic) _Bool isTabSubView; // @synthesize isTabSubView=_isTabSubView;
@property(nonatomic) struct UIEdgeInsets webViewEdgeInsets; // @synthesize webViewEdgeInsets=_webViewEdgeInsets;
@property(nonatomic) _Bool isForceResetWebViewEdgeInsets; // @synthesize isForceResetWebViewEdgeInsets=_isForceResetWebViewEdgeInsets;
@property(nonatomic) _Bool webMediaPlaybackRequiresUserAction; // @synthesize webMediaPlaybackRequiresUserAction=_webMediaPlaybackRequiresUserAction;
@property(copy, nonatomic) CDUnknownBlockType genericeWebCallback; // @synthesize genericeWebCallback=_genericeWebCallback;
@property(nonatomic) unsigned long long webViewType; // @synthesize webViewType=_webViewType;
@property(nonatomic) _Bool useSelfNavigation; // @synthesize useSelfNavigation=_useSelfNavigation;
@property(nonatomic) _Bool isHideBottomBar; // @synthesize isHideBottomBar=_isHideBottomBar;
@property(nonatomic) _Bool isAllowedHideRightBtn; // @synthesize isAllowedHideRightBtn=_isAllowedHideRightBtn;
@property(nonatomic) _Bool hideMiniPlayer; // @synthesize hideMiniPlayer=_hideMiniPlayer;
@property(nonatomic) _Bool isHideHeader; // @synthesize isHideHeader=_isHideHeader;
@property(nonatomic) int localTimeOut; // @synthesize localTimeOut=_localTimeOut;
@property(copy, nonatomic) NSString *webPageUrl; // @synthesize webPageUrl=_webPageUrl;
@property(nonatomic) _Bool scrollsToTop; // @synthesize scrollsToTop=_scrollsToTop;
@property(retain, nonatomic) NSMutableDictionary *responseCallbacks; // @synthesize responseCallbacks;
@property(nonatomic) float visibleTopOffset; // @synthesize visibleTopOffset;
@property(nonatomic) long long lastStatusBarStyle; // @synthesize lastStatusBarStyle;
@property(nonatomic) long long pageCount; // @synthesize pageCount;
@property(nonatomic) _Bool slideShow; // @synthesize slideShow;
@property(retain, nonatomic) NSString *rightBtnTitle; // @synthesize rightBtnTitle=_rightBtnTitle;
@property(nonatomic) _Bool isLocalHtml; // @synthesize isLocalHtml;
@property(copy, nonatomic) NSString *returnBtnTitle; // @synthesize returnBtnTitle;
@property(nonatomic) _Bool showLeftButton; // @synthesize showLeftButton=_showLeftButton;
@property(nonatomic) _Bool showPlayAndReturnBtn; // @synthesize showPlayAndReturnBtn;
@property(nonatomic) SEL onFinishedCallbackSelector; // @synthesize onFinishedCallbackSelector;
@property(nonatomic) __weak id onFinishedCallbackTarget; // @synthesize onFinishedCallbackTarget;
@property(retain, nonatomic) UIWebView *genericWebView; // @synthesize genericWebView;
- (void).cxx_destruct;
- (void)executeJsScript:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)getPageURL;
- (int)_getUrlShareType:(id)arg1;
- (void)_handleResetUserLimitNotification:(id)arg1;
- (void)_resetCookies:(id)arg1;
- (void)tabWillBecomeActive;
- (void)tabWillResignActive;
- (void)setMiniPlayerVisibility:(_Bool)arg1;
- (void)showWebFailedView:(id)arg1;
- (void)loadRequestFromUrl:(id)arg1;
- (void)imageSavedToPhotosAlbum:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)saveImageToPhotos:(id)arg1;
- (void)onImagetWithInfo:(id)arg1 error:(id)arg2;
- (void)onImagetWithInfo:(id)arg1 Image:(id)arg2;
- (void)saveImageByUrl:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)onWebViewLongPressed:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleJsBridgeRequest_sendGift:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_uploadGalleryPhoto:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_savePhoto:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_resetUserLimit:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_resetCookie:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_update_songs_flag:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_sharePoster:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_editPoster:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_playSongByUrl:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_showTips:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_gotoSongComment:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_actionSheet:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_theme_detail:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_showkeyboard:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_initMenu:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_native_open_vip:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_reportSourceId:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_check_liuliang_count:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_native_query_payway:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_query:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_jumptoradio:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_hideMiniPlayer:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_showMiniPlayer:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_ipadpage:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_query_radio:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_size:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_clear:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_delet:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_get:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_data_set:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_register_musicstate:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_query_songlist:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_query_songinfo:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_calldown:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_playnext:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_playpre:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_resume:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_pause:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_music_playlist:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_playradio:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_set_right_btn:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_callshare:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_recognize:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_webPageInnerFailed:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_update_mv_cmts:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_choose:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_goto_dts:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_autoset:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_qplay_set:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_liveplay:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_goMusicHall:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_refreshTitle:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_gomusiccircle:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_newWebview:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_finishWebView:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_returnWebview:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_closeWebview:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_controlbar:(id)arg1 responseCallback:(id)arg2;
- (void)handleJsBridgeRequest_share:(id)arg1 responseCallback:(id)arg2;
- (id)getIconName:(id)arg1;
- (id)findWebBrowserView;
- (void)evaluateJavaScriptStringFromFile:(id)arg1 ofType:(id)arg2;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (id)strVCtype;
- (id)navigationController;
- (int)vcType;
- (void)playStatusDidChange:(id)arg1;
- (void)navigateToMusicCircle;
- (void)resetNavTitleFrame:(struct CGRect)arg1;
- (void)refreshTitle;
- (_Bool)dismissMeWhenOnBackground;
- (void)onFinishCallback;
- (void)handleJSCMDForMClient:(id)arg1 withParam:(id)arg2 callbackId:(id)arg3;
- (_Bool)handleJSCMD:(id)arg1 withParam:(id)arg2 responseCallback:(id)arg3;
- (void)handleJSCMD:(id)arg1 withParam:(id)arg2;
- (void)showControlBar:(id)arg1 animated:(_Bool)arg2;
- (id)removeAllVideoTagJsString;
- (_Bool)shouldRemoveAllVideoTag;
- (void)setShareBtnData:(id)arg1;
- (void)hideShareBtn;
- (void)showShareBtn;
- (void)showDefaultShareBtnForMClient:(id)arg1;
- (void)showDefaultShareBtn:(id)arg1;
- (_Bool)checkAndShowDefaultShareBtn;
- (_Bool)isShowingRightBtn;
- (void)webViewDidFinishLoad:(id)arg1;
- (float)infoViewTopOffset;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)hideBottomBar;
- (void)disableChangeWebViewFrame;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)checkUrlInWhiteList:(id)arg1;
- (_Bool)pageSourceViewEnabled;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)updateNavigateBtnAvailability;
- (void)passiveSharePage:(id)arg1 responseCallback:(id)arg2;
- (void)rightButtonClicked:(id)arg1;
- (void)MClientShareWebPage;
- (void)sharePage:(id)arg1;
- (id)presentFromVC;
- (void)reloadPage:(id)arg1;
- (void)reloadWebPageWithUrl:(id)arg1;
- (void)goBackward:(id)arg1;
- (void)back:(id)arg1;
- (void)closeWebView:(id)arg1;
- (void)goForward:(id)arg1;
- (void)loadWebPage;
- (void)hideLoadingView;
- (void)showLoadingView;
- (void)onTouchUpInsideViewCustomizedNoNetButton:(id)arg1;
- (id)noNetViewCustomButton;
- (void)headerCancel:(id)arg1;
- (void)doHandlePushComming:(id)arg1;
- (void)genericWebViewShowNetErrView;
- (void)genericWebViewShowNetErrWithResult:(int)arg1 withTopOffset:(double)arg2;
- (_Bool)needReFrame;
- (void)reLayout:(long long)arg1;
- (struct CGRect)reFrame;
- (void)reLayoutTo:(int)arg1;
- (id)getCurrentNavigationController;
- (void)reFreshWithNetworkDetection;
- (void)reFresh;
- (void)commentInputFreshAfterDismiss;
- (void)commentInputFreshAfterShow;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)getPhoneNumberWhenShowWeb;
- (void)statusBarFrameDidChange:(id)arg1;
- (void)viewDidLoad;
- (_Bool)isNeedAddBottomLine;
- (void)hideCloseWebviewBtn:(_Bool)arg1;
- (void)delayShowControlBar:(id)arg1;
- (void)setWebViewEdgeInset:(struct UIEdgeInsets)arg1 isForceResetWebViewEdgeInsets:(_Bool)arg2;
- (void)setEdgeInset:(_Bool)arg1;
- (void)reachabilityChanged:(id)arg1;
- (_Bool)canRefreshIfNetChanged;
- (void)resetEdgeInset;
- (_Bool)fixHideHeader:(id)arg1;
- (void)loadView;
- (struct CGRect)getWebViewRect;
- (struct CGRect)getNetErrShowFrame;
- (id)initAsSimpleWebviewWithViewFrame:(struct CGRect)arg1;
- (id)initWithViewFrame:(struct CGRect)arg1;
- (id)init;
- (void)unregisterActiveWebViewVCFromJSHandler;
- (void)loadBlankPage;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

