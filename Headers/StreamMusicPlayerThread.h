//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jan  4 2017 14:06:37).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "QStreamAudioPlayerBase.h"

@class NSCondition, NSMutableArray, NSMutableData, NSThread;

@interface StreamMusicPlayerThread : QStreamAudioPlayerBase
{
    struct CMutex _audioQueueLock;
    struct OpaqueAudioQueue *_audioQueue;
    struct CStreamMusicBuffer *_audioQueueBuffer[4];
    unsigned int _currentAudioQueueBufferIndex;
    unsigned int _maxAudioQueueBufferSize;
    struct CMutex _getBuffersLeftCountLock;
    NSMutableArray *_parserData;
    NSMutableData *_currentData;
    struct CMutex _getSetActionLock;
    NSMutableArray *_actionArray;
    NSThread *_mainThread;
    double _seekTime;
    double _seekByte;
    _Bool _isSeeking;
    void *_pEffectHandle;
    _Bool _bEnableEffect;
    _Bool _isThreadStop;
    _Bool _isStartPlayed;
    _Bool _hasParsedData;
    int _audioBuffersLeftCount;
    int _nEffectType;
    int _nEffectParam;
    NSCondition *_decodeCondition;
    struct IVolumeMaximizer *_volumeMaximizer;
    struct ILoudnessInsurer *_loudnessInsurer;
}

@property(nonatomic) struct ILoudnessInsurer *loudnessInsurer; // @synthesize loudnessInsurer=_loudnessInsurer;
@property(nonatomic) struct IVolumeMaximizer *volumeMaximizer; // @synthesize volumeMaximizer=_volumeMaximizer;
@property(nonatomic) _Bool hasParsedData; // @synthesize hasParsedData=_hasParsedData;
@property(nonatomic) _Bool isStartPlayed; // @synthesize isStartPlayed=_isStartPlayed;
@property(retain, nonatomic) NSCondition *decodeCondition; // @synthesize decodeCondition=_decodeCondition;
@property int nEffectParam; // @synthesize nEffectParam=_nEffectParam;
@property int nEffectType; // @synthesize nEffectType=_nEffectType;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)workInSpareTime;
- (void)dealWithDataFinish:(_Bool)arg1;
- (void)readBufferData:(_Bool)arg1 waittimes:(double *)arg2;
- (void)decodeRun;
- (_Bool)startThread;
- (void)cancelThread;
- (void)handlePropertyChangeForQueue:(struct OpaqueAudioQueue *)arg1 propertyID:(unsigned int)arg2;
- (void)handleBufferCompleteForQueue:(struct OpaqueAudioQueue *)arg1 buffer:(struct AudioQueueBuffer *)arg2;
- (void)enqueueBuffer;
- (void)tryToStart;
- (_Bool)isBuffering;
- (void)createAudioQueue:(id)arg1 withInputDesc:(id)arg2;
- (void)createAudioFileStreamByCurrentData;
- (void)stopAudioQueue;
- (void)resumeAudioQueue;
- (void)pauseAudioQueue;
- (void)pauseAudioQueueDelay;
- (int)fadePauseAudioQueue;
- (int)fadeStartAudioQueue;
- (void)fadeAudioQueueWithDuration:(double)arg1;
- (id)LoudnessInsurer:(id)arg1;
- (id)MaximizerVolume:(id)arg1;
- (id)processVolumeEffect:(id)arg1;
- (id)addAudioEffect:(id)arg1;
- (void)setFadeVolumnSample:(short *)arg1 count:(int)arg2 fadeValue:(double)arg3;
- (id)processAutoStopTimerEffect:(id)arg1;
- (id)processDTSEffect:(id)arg1;
- (id)processQQMusicEffect:(id)arg1;
- (void)releaseAudioEffect;
- (_Bool)initAudioEffect;
- (void)releseVolumeEffect;
- (void)initVolumeEffect;
- (void)threadSetEffect;
- (void)handleAudioStreamRead;
- (void)handleAudioStreamPacketDesctiption:(id)arg1 PacketData:(id)arg2;
- (void)handleAudioStreamDesc:(id)arg1 withInputDesc:(id)arg2;
- (void)clearData;
- (_Bool)threadClear;
- (_Bool)threadStop:(_Bool)arg1 finish:(_Bool)arg2;
- (_Bool)threadSeek:(double)arg1;
- (_Bool)threadResume;
- (_Bool)threadPause;
- (_Bool)threadPlay;
- (_Bool)threadPrepare;
- (id)init;
- (void)AudioBuffersLeftCountDel;
- (void)AudioBuffersLeftCountAdd;
@property(nonatomic) int audioBuffersLeftCount; // @synthesize audioBuffersLeftCount=_audioBuffersLeftCount;
@property _Bool isThreadStop; // @synthesize isThreadStop=_isThreadStop;

@end

