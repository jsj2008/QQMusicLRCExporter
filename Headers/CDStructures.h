//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jan  4 2017 14:06:37).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSMutableArray;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AMREncodeFloat {
    void *_field1;
};

struct AVConnectionType;

struct AVPicture {
    char *_field1[4];
    int _field2[4];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
};

struct AVPlayerState;

struct Allocator<capu::GenericListNode<EtchRuntimeListener *>>;

struct Allocator<capu::GenericListNode<const EtchObjectType *>>;

struct AppInfo {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field6;
};

struct AppSession {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> _field2;
};

struct Attachment {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct vector<char, std::allocator<char>> _field3;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long mStartOffset;
    unsigned int mVariableFramesInPacket;
    unsigned int mDataByteSize;
};

struct BMWRemotingClientFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct BinaryBitmap;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CMusicBand {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct vector<int, std::allocator<int>> _field5;
    struct vector<int, std::allocator<int>> _field6;
    struct vector<int, std::allocator<int>> _field7;
    struct vector<int, std::allocator<int>> _field8;
    float *_field9;
    float *_field10;
    float *_field11;
    float *_field12;
};

struct CMutex {
    struct _opaque_pthread_mutex_t m_mutex;
};

struct CRandomPlayData {
    vector_01d0227c _field1;
    int _field2;
    int _field3;
};

struct CStatistic {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned short _field8;
    unsigned char _field9[5120];
};

struct CachedFailedData {
    _Bool wasCachedFailed;
    long long failedCacheOrder;
};

struct Comparator;

struct ConsoleLogAppender {
    CDUnknownFunctionPointerType *_field1;
    struct Mutex _field2;
};

struct DCAListeningTestRenderCallbackContext {
    struct OpaqueAudioComponentInstance *audioUnit;
    int inputChannelMask;
    int audioPCMSampleType;
    unsigned int bufferSizeInBytes;
    void *dataBuffer;
};

struct DNSCache;

struct Descriptor;

struct EnumDescriptor;

struct EnumValueDescriptor;

struct EtchAsyncResult<EtchBool>;

struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>;

struct EtchAsyncResult<EtchInt32>;

struct EtchAsyncResult<EtchNativeArray<signed char>>;

struct EtchAsyncResult<EtchObject>;

struct EtchAsyncResult<EtchString>;

struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>;

struct EtchAsyncResultNone;

struct EtchBool;

struct EtchByte;

struct EtchComparator<EtchString>;

struct EtchDeliveryService;

struct EtchException;

struct EtchFloat;

struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field3;
};

struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>;

struct EtchInt32 {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    int _field3;
};

struct EtchLogger {
    CDUnknownFunctionPointerType *_field1;
    struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> _field2;
    struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> _field3;
    struct LogContext *_field4;
    struct LogContext *_field5;
    struct LogContext *_field6;
    struct LogContext *_field7;
    struct LogContext *_field8;
    struct LogContext *_field9;
    struct LogContext *_field10;
    struct LogContext *_field11;
};

struct EtchNativeArray<capu::SmartPointer<EtchObject>>;

struct EtchNativeArray<signed char>;

struct EtchObject;

struct EtchObjectType;

struct EtchResources {
    struct EtchResources *_field1;
    struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> _field2;
};

struct EtchRuntime {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct EtchLogger _field3;
    struct ConsoleLogAppender _field4;
    unsigned long long _field5;
    struct Mutex _field6;
    struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> _field7;
};

struct EtchRuntimeListener;

struct EtchShort;

struct EtchStack;

struct EtchString {
    CDUnknownFunctionPointerType *_field1;
    struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct EtchValueFactory;

struct ExceptionUpload {
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field1;
    long long _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct AppSession _field10;
    int _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field13;
    struct AppInfo _field14;
    struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> _field15;
    struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> _field16;
    struct vector<rqd::Attachment, std::allocator<rqd::Attachment>> _field17;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field18;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field19;
};

struct ExceptionUploadPackage {
    struct vector<rqd::ExceptionUpload, std::allocator<rqd::ExceptionUpload>> _field1;
};

struct FLAC__StreamDecoderPrivate;

struct FLAC__StreamDecoderProtected;

struct FieldDescriptor {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field4;
    struct FileDescriptor *_field5;
    int _field6;
    int _field7;
    int _field8;
    _Bool _field9;
    struct Descriptor *_field10;
    struct Descriptor *_field11;
    struct Descriptor *_field12;
    struct EnumDescriptor *_field13;
    struct FieldDescriptor *_field14;
    struct FieldOptions *_field15;
    _Bool _field16;
    union {
        int _field1;
        long long _field2;
        unsigned int _field3;
        unsigned long long _field4;
        float _field5;
        double _field6;
        _Bool _field7;
        struct EnumValueDescriptor *_field8;
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field9;
    } _field17;
};

struct FieldOptions;

struct FileDescriptor;

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 one;
    struct GPUVector4 two;
    struct GPUVector4 three;
    struct GPUVector4 four;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float one;
    float two;
    float three;
};

struct GPUVector4 {
    float one;
    float two;
    float three;
    float four;
};

struct GenericListNode<EtchRuntimeListener *> {
    struct EtchRuntimeListener *_field1;
    struct GenericListNode<EtchRuntimeListener *> *_field2;
    struct GenericListNode<EtchRuntimeListener *> *_field3;
};

struct GenericListNode<const EtchObjectType *> {
    struct EtchObjectType *_field1;
    struct GenericListNode<const EtchObjectType *> *_field2;
    struct GenericListNode<const EtchObjectType *> *_field3;
};

struct GifState {
    struct AVPicture _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    unsigned int *_field8;
    int _field9;
    int _field10;
    char *_field11;
    char *_field12;
    void *_field13;
    unsigned char _field14[768];
    unsigned char _field15[768];
};

struct HashSet<capu::ILogAppender *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashSet<capu::LogContext *, capu::Comparator, capu::CapuDefaultHashFunction> {
    struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> _field1;
};

struct HashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchObjectHash> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct EtchComparator<EtchString> _field11;
};

struct HashTable<capu::ILogAppender *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTable<capu::LogContext *, char, capu::Comparator, capu::CapuDefaultHashFunction> {
    CDUnknownFunctionPointerType *_field1;
    unsigned char _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct HashTableEntry **_field5;
    struct HashTableEntry *_field6;
    struct HashTableEntry *_field7;
    struct HashTableEntry *_field8;
    unsigned long long _field9;
    _Bool _field10;
    struct Comparator _field11;
};

struct HashTableEntry;

struct HttpClient {
    struct Socket _field1;
    struct HttpResponse *_field2;
    struct HttpRequest *_field3;
    struct SocketAsyncEventArgs *_field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    CDUnknownFunctionPointerType _field7;
    int _field8;
    int _field9;
    struct MutexLock _field10;
    int _field11;
};

struct HttpRequest {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field7;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
};

struct HttpResponse {
    int _field1;
    int _field2;
    int _field3;
    char *_field4;
    char *_field5;
    _Bool _field6;
};

struct ICMPHeader {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct IDEtchSessionCppAdaptor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct ILoudnessInsurer {
    CDUnknownFunctionPointerType *_field1;
};

struct IQPlayAutoIOCallback;

struct IQPlayAutoMessageCallback;

struct IVolumeMaximizer {
    CDUnknownFunctionPointerType *_field1;
};

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct JKTokenCacheItem *_field5;
};

struct KSPerformanceMonitorConfig {
    long long smallDropEventFrameNumber;
    long long largeDropEventFrameNumber;
    long long maxFrameDropAccount;
    _Bool shouldCaptureStackTraces;
};

struct List<EtchRuntimeListener *, capu::Allocator<capu::GenericListNode<EtchRuntimeListener *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<EtchRuntimeListener *> _field2;
    unsigned long long _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<EtchRuntimeListener *>> _field5;
};

struct List<const EtchObjectType *, capu::Allocator<capu::GenericListNode<const EtchObjectType *>>, capu::Comparator> {
    CDUnknownFunctionPointerType *_field1;
    struct GenericListNode<const EtchObjectType *> _field2;
    unsigned long long _field3;
    struct Comparator _field4;
    struct Allocator<capu::GenericListNode<const EtchObjectType *>> _field5;
};

struct LogContext;

struct LogLevel;

struct LogQueue {
    char *_field1;
    struct vector<LogQueueElement, std::allocator<LogQueueElement>> _field2;
};

struct LogQueueElement;

struct LoginReturn {
    _Bool _field1;
    int _field2;
};

struct Loop {
    struct Thread _field1;
    struct MutexLock _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    struct list<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> _field6;
    struct vector<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> _field7;
    struct set<int, std::less<int>, std::allocator<int>> _field8;
};

struct MapMode;

struct Mutex {
    struct _opaque_pthread_mutex_t _field1;
    struct _opaque_pthread_mutexattr_t {
        long long _field1;
        char _field2[8];
    } _field2;
};

struct MutexLock {
    struct _opaque_pthread_mutex_t _field1;
};

struct NSDictionary {
    Class _field1;
};

struct ObjectWithExpInfo {
    Class _field1;
};

struct OpaqueAudioComponentInstance;

struct PCMFifoBuffer;

struct QLMovieItem {
    Class _field1;
};

struct QMAudioConverterSetting {
    struct AudioStreamBasicDescription inputASBD;
    struct AudioStreamBasicDescription outputASBD;
    NSMutableArray *convertDataArray;
    long long mStartOffset;
};

struct QPlayAuto {
    int _field1;
    struct IQPlayAutoMessageCallback *_field2;
    struct IQPlayAutoIOCallback *_field3;
    struct WifiDiscover *_field4;
};

struct QPlayAutoIOWifiCallback {
    CDUnknownFunctionPointerType *_field1;
    char _field2[20];
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct IQPlayAutoMessageCallback *_field13;
    struct _opaque_pthread_t *_field14;
    struct _opaque_pthread_t *_field15;
    struct _opaque_pthread_t *_field16;
    _Bool _field17;
    struct _opaque_pthread_t *_field18;
    struct _opaque_pthread_mutex_t _field19;
    struct _opaque_pthread_mutex_t _field20;
    struct _opaque_pthread_mutex_t _field21;
    struct _opaque_pthread_mutex_t _field22;
};

struct QPlayAutoMsgHandler {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct RHMIMetaData;

struct RHMIResourceType;

struct RHMIVersion;

struct Reader {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
};

struct Ref<zxing::BinaryBitmap> {
    struct BinaryBitmap *_field1;
};

struct Ref<zxing::Result> {
    struct Result *_field1;
};

struct Ref<zxing::ResultPointCallback> {
    struct ResultPointCallback *_field1;
};

struct Reflection {
    CDUnknownFunctionPointerType *_field1;
};

struct RemoteBMWRemotingServer {
    CDUnknownFunctionPointerType *_field1;
    struct EtchRuntime *_field2;
    struct EtchDeliveryService *_field3;
    struct EtchValueFactory *_field4;
    struct EtchStack *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct EtchInt32 _field7;
    struct EtchInt32 _field8;
    struct EtchRuntime *_field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    struct EtchInt32 _field12;
    struct EtchInt32 _field13;
};

struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
};

struct RequestPkg {
    int _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field6;
    int _field7;
    struct vector<char, std::allocator<char>> _field8;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field9;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field10;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field11;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field12;
};

struct ResponsePkg {
    char _field1;
    int _field2;
    struct vector<char, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    long long _field5;
};

struct Result;

struct ResultPointCallback;

struct SCollectResult {
    int m_eErrorCollectType;
    int m_ifolderID;
};

struct SColorStyle {
    char index;
    short hue;
    char saturation;
    char bright;
    char alpha;
    unsigned long long showColor;
};

struct SCompareResult {
    unsigned long long m_iFromCount;
    unsigned long long m_iToCount;
    int m_eCompareResult;
    unsigned long long m_iFrom;
    unsigned long long m_iLength;
    unsigned long long m_iTo;
};

struct SFlexInteger {
    char magicNumber;
    char eFlexDataType;
    long long data;
};

struct SFlyingParam {
    double fTop;
    double fMarginLeft;
    double fContentWidth;
    double fDuration;
    double fMaxAlpha;
};

struct SLineIndent {
    double _field1;
    double _field2;
    _Bool _field3;
    _Bool _field4;
};

struct SNode {
    void *_field1;
    struct SNode *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchFloat> {
    struct EtchFloat *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    unsigned long long *_field2;
};

struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned long long *_field2;
};

struct Socket {
    int _field1;
    _Bool _field2;
    struct sockaddr_in6 _field3;
    struct Loop *_field4;
    int _field5;
    struct DNSCache _field6;
};

struct SocketAsyncEventArgs;

struct SongInfoExt {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
};

struct SongInfoExtFileAttribute {
    int userLevel;
};

struct SongInfoExtKey {
    unsigned long long _field1;
    unsigned int _field2;
};

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct SummaryInfo {
    long long _field1;
    char _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field4;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field5;
};

struct Thread {
    struct _opaque_pthread_t *_field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
    _Bool _field4;
    _Bool _field5;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UnknownFieldSet {
    struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>> *_field1;
};

struct User {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedField<int> _field3;
    struct RepeatedField<int> _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    unsigned int _field9[1];
};

struct UserInfoPackage {
    char _field1;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field2;
    struct basic_string<char, std::char_traits<char>, std::allocator<char>> _field3;
    struct vector<rqd::SummaryInfo, std::allocator<rqd::SummaryInfo>> _field4;
    struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field5;
};

struct ValueToBind {
    long long intValue;
    char *pnzString;
    double doubleValue;
    long long valueType;
};

struct VersionInfo;

struct VoicePriorityType;

struct WBSDKJKConstBuffer {
    struct WBSDKJKConstPtrRange _field1;
};

struct WBSDKJKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKEncodeState {
    struct WBSDKJKManagedBuffer _field1;
    struct WBSDKJKManagedBuffer _field2;
    unsigned long long _field3;
    struct WBSDKJKFastClassLookup _field4;
    struct WBSDKJKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct WBSDKJKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct WBSDKJKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct WBSDKJKManagedBuffer {
    struct WBSDKJKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct WBSDKJKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct WBSDKJKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct WBSDKJKParseState {
    unsigned long long _field1;
    struct WBSDKJKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct WBSDKJKParseToken _field9;
    struct WBSDKJKObjectStack _field10;
    struct WBSDKJKTokenCache _field11;
    struct WBSDKJKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct WBSDKJKParseToken {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    struct WBSDKJKTokenValue _field3;
    struct WBSDKJKManagedBuffer _field4;
};

struct WBSDKJKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct WBSDKJKTokenCache {
    struct WBSDKJKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct WBSDKJKTokenCacheItem;

struct WBSDKJKTokenValue {
    struct WBSDKJKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    CDUnion_abebb5d1 _field4;
    struct WBSDKJKTokenCacheItem *_field5;
};

struct WXVoiceEngine {
    struct Loop _field1;
    struct HttpRequest _field2;
    struct HttpResponse _field3;
    struct HttpClient _field4;
};

struct WifiDiscover;

struct _Alloc_hider {
    char *_field1;
};

struct _DDRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _List_impl {
    struct _List_node_base _field1;
};

struct _List_node_base {
    struct _List_node_base *_field1;
    struct _List_node_base *_field2;
};

struct _LzRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _Rb_tree<SongInfoExtKey, SongInfoExtKey, std::_Identity<SongInfoExtKey>, std::less<SongInfoExtKey>, std::allocator<SongInfoExtKey>> {
    struct _Rb_tree_impl<std::less<SongInfoExtKey>, false> _field1;
};

struct _Rb_tree<SongInfoExtKey, std::pair<const SongInfoExtKey, SongInfoExt>, std::_Select1st<std::pair<const SongInfoExtKey, SongInfoExt>>, std::less<SongInfoExtKey>, std::allocator<std::pair<const SongInfoExtKey, SongInfoExt>>> {
    struct _Rb_tree_impl<std::less<SongInfoExtKey>, false> _M_impl;
};

struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, id>, std::_Select1st<std::pair<const std::basic_string<char>, id>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, id>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> _field1;
};

struct _Rb_tree_impl<std::less<SongInfoExtKey>, false> {
    struct less<SongInfoExtKey> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_impl<std::less<std::basic_string<char>>, false> {
    struct less<std::basic_string<char>> _field1;
    struct _Rb_tree_node_base _field2;
    unsigned long long _field3;
};

struct _Rb_tree_node_base {
    int _M_color;
    struct _Rb_tree_node_base *_M_parent;
    struct _Rb_tree_node_base *_M_left;
    struct _Rb_tree_node_base *_M_right;
};

struct _RecoverConfig {
    unsigned int _field1;
    _Bool _field2;
    unsigned int _field3;
    unsigned int _field4;
    _Bool _field5;
};

struct _TRSpeexEncodeContex {
    void *st;
    struct SpeexBits bits;
    int frame_size;
    struct PCMFifoBuffer *pFifo;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct _ffi_type {
    unsigned long long _field1;
    unsigned short _field2;
    unsigned short _field3;
    struct _ffi_type **_field4;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct _xmlXPathObject {
    int _field1;
    struct _xmlNodeSet *_field2;
    int _field3;
    double _field4;
    char *_field5;
    void *_field6;
    int _field7;
    void *_field8;
    int _field9;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct basic_string<char, std::char_traits<char>, std::allocator<char>> {
    struct _Alloc_hider _field1;
};

struct bignum_st;

struct bn_blinding_st;

struct bn_mont_ctx_st;

struct crypto_ex_data_st {
    struct stack_st_void *_field1;
    int _field2;
};

struct engine_st;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct less<SongInfoExtKey>;

struct less<int>;

struct less<std::basic_string<char>>;

struct list<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct _List_impl _field1;
};

struct mach_timebase_info {
    unsigned int _field1;
    unsigned int _field2;
};

struct map<SongInfoExtKey, SongInfoExt, std::less<SongInfoExtKey>, std::allocator<std::pair<const SongInfoExtKey, SongInfoExt>>> {
    struct _Rb_tree<SongInfoExtKey, std::pair<const SongInfoExtKey, SongInfoExt>, std::_Select1st<std::pair<const SongInfoExtKey, SongInfoExt>>, std::less<SongInfoExtKey>, std::allocator<std::pair<const SongInfoExtKey, SongInfoExt>>> _M_t;
};

struct map<std::basic_string<char>, id, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, id>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, id>, std::_Select1st<std::pair<const std::basic_string<char>, id>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, id>>> _field1;
};

struct map<std::basic_string<char>, std::basic_string<char>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, std::basic_string<char>>, std::_Select1st<std::pair<const std::basic_string<char>, std::basic_string<char>>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, std::basic_string<char>>>> _field1;
};

struct mg_header {
    char *_field1;
    char *_field2;
};

struct mg_request_info {
    char *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char _field6[48];
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct mg_header _field13[64];
};

struct rsa_meth_st;

struct rsa_st {
    int _field1;
    long long _field2;
    struct rsa_meth_st *_field3;
    struct engine_st *_field4;
    struct bignum_st *_field5;
    struct bignum_st *_field6;
    struct bignum_st *_field7;
    struct bignum_st *_field8;
    struct bignum_st *_field9;
    struct bignum_st *_field10;
    struct bignum_st *_field11;
    struct bignum_st *_field12;
    struct crypto_ex_data_st _field13;
    int _field14;
    int _field15;
    struct bn_mont_ctx_st *_field16;
    struct bn_mont_ctx_st *_field17;
    struct bn_mont_ctx_st *_field18;
    char *_field19;
    struct bn_blinding_st *_field20;
    struct bn_blinding_st *_field21;
};

struct set<SongInfoExtKey, std::less<SongInfoExtKey>, std::allocator<SongInfoExtKey>> {
    struct _Rb_tree<SongInfoExtKey, SongInfoExtKey, std::_Identity<SongInfoExtKey>, std::less<SongInfoExtKey>, std::allocator<SongInfoExtKey>> _field1;
};

struct set<int, std::less<int>, std::allocator<int>> {
    struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> _field1;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct stack_st_void;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tm {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    long long _field10;
    char *_field11;
};

struct vector<LogQueueElement, std::allocator<LogQueueElement>> {
    struct _Vector_impl {
        struct LogQueueElement *_field1;
        struct LogQueueElement *_field2;
        struct LogQueueElement *_field3;
    } _field1;
};

struct vector<SongInfoExt, std::allocator<SongInfoExt>> {
    struct _Vector_impl {
        struct SongInfoExt *_field1;
        struct SongInfoExt *_field2;
        struct SongInfoExt *_field3;
    } _field1;
};

struct vector<char, std::allocator<char>> {
    struct _Vector_impl {
        char *_field1;
        char *_field2;
        char *_field3;
    } _field1;
};

struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>>;

struct vector<id<ApKeyChangeObserver>, std::__1::allocator<id<ApKeyChangeObserver>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__strong id<ApKeyChangeObserver>*, std::__1::allocator<id<ApKeyChangeObserver>>> {
        id *__first_;
    } __end_cap_;
};

struct vector<int, std::allocator<int>> {
    struct _Vector_impl {
        int *_field1;
        int *_field2;
        int *_field3;
    } _field1;
};

struct vector<rqd::AppInfo, std::allocator<rqd::AppInfo>> {
    struct _Vector_impl {
        struct AppInfo *_field1;
        struct AppInfo *_field2;
        struct AppInfo *_field3;
    } _field1;
};

struct vector<rqd::Attachment, std::allocator<rqd::Attachment>> {
    struct _Vector_impl {
        struct Attachment *_field1;
        struct Attachment *_field2;
        struct Attachment *_field3;
    } _field1;
};

struct vector<rqd::ExceptionUpload, std::allocator<rqd::ExceptionUpload>> {
    struct _Vector_impl {
        struct ExceptionUpload *_field1;
        struct ExceptionUpload *_field2;
        struct ExceptionUpload *_field3;
    } _field1;
};

struct vector<rqd::SummaryInfo, std::allocator<rqd::SummaryInfo>> {
    struct _Vector_impl {
        struct SummaryInfo *_field1;
        struct SummaryInfo *_field2;
        struct SummaryInfo *_field3;
    } _field1;
};

struct vector<std::basic_string<char>, std::allocator<std::basic_string<char>>> {
    struct _Vector_impl {
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field1;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field2;
        struct basic_string<char, std::char_traits<char>, std::allocator<char>> *_field3;
    } _field1;
};

struct vector<unsigned long, std::allocator<unsigned long>> {
    struct _Vector_impl {
        unsigned long long *_M_start;
        unsigned long long *_M_finish;
        unsigned long long *_M_end_of_storage;
    } _M_impl;
};

struct vector<wxvoice::SocketAsyncEventArgs *, std::allocator<wxvoice::SocketAsyncEventArgs *>> {
    struct _Vector_impl {
        struct SocketAsyncEventArgs **_field1;
        struct SocketAsyncEventArgs **_field2;
        struct SocketAsyncEventArgs **_field3;
    } _field1;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned short wCmd;
    unsigned short wSubCmd;
    short wRst;
    unsigned int dwUsed;
    unsigned int dwCalUsed;
    unsigned short wTry;
    unsigned char acHostName[32];
    unsigned char acHostIp[32];
    unsigned short wPort;
    unsigned char cConn;
    unsigned char cNetType;
    unsigned char cNetwork;
    unsigned char acErrorStr[64];
    unsigned short wSendDataLen;
    unsigned short wResvDataLen;
} CDStruct_34f44c17;

typedef struct {
    char acHostName[32];
    unsigned short wPort;
    unsigned short wTimeout;
} CDStruct_93d23b61;

typedef struct {
    void *_field1;
    unsigned short _field2;
} CDStruct_815e4876;

typedef struct {
    int _field1;
} CDStruct_fcaf9308;

typedef struct {
    long long _field1;
    unsigned short _field2;
    unsigned short _field3;
} CDStruct_200c4767;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int _field1;
    CDStruct_183601bc *_field2;
} CDStruct_166d2db6;

typedef struct {
    struct FLAC__StreamDecoderProtected *_field1;
    struct FLAC__StreamDecoderPrivate *_field2;
} CDStruct_15fed524;

typedef struct {
    int _field1;
    union {
        CDStruct_166d2db6 _field1;
    } _field2;
} CDStruct_9f9cee96;

typedef struct {
    int _field1;
    int _field2;
    unsigned int _field3;
    union {
        struct {
            unsigned int _field1;
            unsigned int _field2;
            unsigned int _field3;
            unsigned int _field4;
            unsigned int _field5;
            unsigned int _field6;
            unsigned int _field7;
            unsigned long long _field8;
            unsigned char _field9[16];
        } _field1;
        CDStruct_fcaf9308 _field2;
        struct {
            unsigned char _field1[4];
            char *_field2;
        } _field3;
        CDStruct_166d2db6 _field4;
        struct {
            struct {
                unsigned int _field1;
                char *_field2;
            } _field1;
            unsigned int _field2;
            CDStruct_183601bc *_field3;
        } _field5;
        struct {
            char _field1[129];
            unsigned long long _field2;
            int _field3;
            unsigned int _field4;
            CDStruct_183601bc *_field5;
        } _field6;
        struct {
            int _field1;
            char *_field2;
            char *_field3;
            unsigned int _field4;
            unsigned int _field5;
            unsigned int _field6;
            unsigned int _field7;
            unsigned int _field8;
            char *_field9;
        } _field7;
        struct {
            char *_field1;
        } _field8;
    } _field4;
} CDStruct_4903f7c2;

typedef struct {
    struct {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
        int _field4;
        unsigned int _field5;
        int _field6;
        union {
            unsigned int _field1;
            unsigned long long _field2;
        } _field7;
        unsigned char _field8;
    } _field1;
    struct {
        int _field1;
        union {
            CDStruct_fcaf9308 _field1;
            struct {
                CDStruct_9f9cee96 _field1;
                unsigned int _field2;
                int _field3[4];
                int *_field4;
            } _field2;
            struct {
                CDStruct_9f9cee96 _field1;
                unsigned int _field2;
                unsigned int _field3;
                int _field4;
                int _field5[32];
                int _field6[32];
                int *_field7;
            } _field3;
            struct {
                int *_field1;
            } _field4;
        } _field2;
        unsigned int _field3;
    } _field2[8];
    struct {
        unsigned short _field1;
    } _field3;
} CDStruct_47481730;

// Template types
typedef struct Ref<zxing::BinaryBitmap> {
    struct BinaryBitmap *_field1;
} Ref_62e6a0fd;

typedef struct Ref<zxing::Result> {
    struct Result *_field1;
} Ref_1fcf4400;

typedef struct Ref<zxing::ResultPointCallback> {
    struct ResultPointCallback *_field1;
} Ref_f3b3a220;

typedef struct SmartPointer<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    unsigned long long *_field2;
} SmartPointer_40b79cb6;

typedef struct SmartPointer<EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>>> {
    struct EtchAsyncResult<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> *_field1;
    unsigned long long *_field2;
} SmartPointer_7c4c2294;

typedef struct SmartPointer<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    unsigned long long *_field2;
} SmartPointer_9c6f0a57;

typedef struct SmartPointer<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    unsigned long long *_field2;
} SmartPointer_22dd72f2;

typedef struct SmartPointer<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    unsigned long long *_field2;
} SmartPointer_24816b3b;

typedef struct SmartPointer<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    unsigned long long *_field2;
} SmartPointer_f678d524;

typedef struct SmartPointer<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    unsigned long long *_field2;
} SmartPointer_68208fab;

typedef struct SmartPointer<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    unsigned long long *_field2;
} SmartPointer_a510579c;

typedef struct SmartPointer<EtchBool> {
    struct EtchBool *_field1;
    unsigned long long *_field2;
} SmartPointer_56a342d9;

typedef struct SmartPointer<EtchByte> {
    struct EtchByte *_field1;
    unsigned long long *_field2;
} SmartPointer_7914d76a;

typedef struct SmartPointer<EtchException> {
    struct EtchException *_field1;
    unsigned long long *_field2;
} SmartPointer_36f90cf0;

typedef struct SmartPointer<EtchFloat> {
    struct EtchFloat *_field1;
    unsigned long long *_field2;
} SmartPointer_5c6f1d80;

typedef struct SmartPointer<EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash>> {
    struct EtchHashTable<capu::SmartPointer<EtchObject>, capu::SmartPointer<EtchObject>, EtchComparator<capu::SmartPointer<EtchObject>>, EtchObjectHash> *_field1;
    unsigned long long *_field2;
} SmartPointer_0ac90d3f;

typedef struct SmartPointer<EtchInt32> {
    struct EtchInt32 *_field1;
    unsigned long long *_field2;
} SmartPointer_25c440db;

typedef struct SmartPointer<EtchNativeArray<capu::SmartPointer<EtchObject>>> {
    struct EtchNativeArray<capu::SmartPointer<EtchObject>> *_field1;
    unsigned long long *_field2;
} SmartPointer_c35a0fc3;

typedef struct SmartPointer<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    unsigned long long *_field2;
} SmartPointer_4c5e170f;

typedef struct SmartPointer<EtchObject> {
    struct EtchObject *_field1;
    unsigned long long *_field2;
} SmartPointer_65720f25;

typedef struct SmartPointer<EtchShort> {
    struct EtchShort *_field1;
    unsigned long long *_field2;
} SmartPointer_ba4b74eb;

typedef struct SmartPointer<EtchString> {
    struct EtchString *_field1;
    unsigned long long *_field2;
} SmartPointer_f5ebf141;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    unsigned long long *_field2;
} SmartPointer_3c0c000b;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    unsigned long long *_field2;
} SmartPointer_ae5953d7;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    unsigned long long *_field2;
} SmartPointer_20a53774;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    unsigned long long *_field2;
} SmartPointer_1deffe67;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    unsigned long long *_field2;
} SmartPointer_ecc263ad;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    unsigned long long *_field2;
} SmartPointer_8c758832;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    unsigned long long *_field2;
} SmartPointer_0a136723;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    unsigned long long *_field2;
} SmartPointer_ae2b53a9;

typedef struct SmartPointer<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    unsigned long long *_field2;
} SmartPointer_d9d1298e;

typedef struct map<SongInfoExtKey, SongInfoExt, std::less<SongInfoExtKey>, std::allocator<std::pair<const SongInfoExtKey, SongInfoExt>>> {
    struct _Rb_tree<SongInfoExtKey, std::pair<const SongInfoExtKey, SongInfoExt>, std::_Select1st<std::pair<const SongInfoExtKey, SongInfoExt>>, std::less<SongInfoExtKey>, std::allocator<std::pair<const SongInfoExtKey, SongInfoExt>>> _M_t;
} map_8f5f64e2;

typedef struct map<std::basic_string<char>, id, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, id>>> {
    struct _Rb_tree<std::basic_string<char>, std::pair<const std::basic_string<char>, id>, std::_Select1st<std::pair<const std::basic_string<char>, id>>, std::less<std::basic_string<char>>, std::allocator<std::pair<const std::basic_string<char>, id>>> _field1;
} map_94930aea;

typedef struct set<SongInfoExtKey, std::less<SongInfoExtKey>, std::allocator<SongInfoExtKey>> {
    struct _Rb_tree<SongInfoExtKey, SongInfoExtKey, std::_Identity<SongInfoExtKey>, std::less<SongInfoExtKey>, std::allocator<SongInfoExtKey>> _field1;
} set_249e05ea;

typedef struct vector<SongInfoExt, std::allocator<SongInfoExt>> {
    struct _Vector_impl {
        struct SongInfoExt *_field1;
        struct SongInfoExt *_field2;
        struct SongInfoExt *_field3;
    } _field1;
} vector_102663fe;

typedef struct vector<unsigned long, std::allocator<unsigned long>> {
    struct _Vector_impl {
        unsigned long long *_M_start;
        unsigned long long *_M_finish;
        unsigned long long *_M_end_of_storage;
    } _M_impl;
} vector_01d0227c;

#pragma mark Typedef'd Unions

typedef union {
    long long _field1;
    unsigned long long _field2;
    double _field3;
} CDUnion_abebb5d1;

