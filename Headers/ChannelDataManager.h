//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jan  4 2017 14:06:37).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ProtocolHostDelegate-Protocol.h"

@class AlbumIntroductionProtocol, ChannelItem, ChannelV4Category, DetailSubscribedListProtocol, FocusProtocol, ForMeRecData, MainSubscribedListProtocol, MusicCircleFeed, MusicListCategory, NSDictionary, NSMutableArray, NSMutableDictionary, NSTimer, ShareObject, SubscribeListItem;

@interface ChannelDataManager : NSObject <ProtocolHostDelegate>
{
    NSMutableDictionary *_memoryCache;
    NSMutableDictionary *_FMmemoryCache;
    MainSubscribedListProtocol *_mainSubscribedListProtocol;
    NSMutableArray *_focusChannelItems;
    NSMutableArray *_channelTypeItems;
    _Bool _mainSubscribeListDidUpdate;
    DetailSubscribedListProtocol *_detailSubscribedListProtocol;
    AlbumIntroductionProtocol *_albumIntroProtocol;
    FocusProtocol *_focusProtocol;
    NSMutableDictionary *_subscribedChannelsDidUpdated;
    double _refreshInterval;
    NSMutableDictionary *_categoryClusterCache;
    _Bool _fecthRadioData;
    SubscribeListItem *_subscribeListItem;
    NSMutableArray *_guessYouLikeSongRecords;
    MusicListCategory *_selectedCategory;
    long long _recordingRadioId;
    NSDictionary *_radioTjReportDic;
    NSMutableArray *_folderSongs;
    ChannelV4Category *_curSelectedCategory;
    unsigned long long _qqUinByFetchFocusItem;
    unsigned long long _qqUinByFetchRecommendData;
    ShareObject *_requestPlayingShareObj;
    ChannelItem *_requestPlayingChannelItem;
    ForMeRecData *_requestPlayingForMeObj;
    MusicCircleFeed *_requestPlayingMusicCircleObj;
    NSMutableArray *_recentLitenRadio;
    NSDictionary *_tjReportInfo;
    NSDictionary *_tj_tjReportInfo;
    long long _lastPlayCategoryId;
    NSMutableArray *_recentPlayCategoryList;
    NSTimer *_channelHomeDataRefreshTimer;
    NSTimer *_rankingRefreshTimer;
    NSTimer *_radioRefreshTimer;
    NSTimer *_recommandRefreshTimer;
    NSTimer *_squareRefreshTimer;
    NSTimer *_firstTimeDelayFetchRadioTimer;
    NSMutableDictionary *_dicType2ChannelListProtocol;
    NSMutableArray *_fmRadioIdList;
}

+ (void)resetChannelRootVCToLastestVersionIfNewUser;
+ (id)getCacheKey:(id)arg1 channelItem:(id)arg2;
+ (id)sharedManager;
@property(retain, nonatomic) NSMutableArray *fmRadioIdList; // @synthesize fmRadioIdList=_fmRadioIdList;
@property(retain, nonatomic) NSMutableDictionary *dicType2ChannelListProtocol; // @synthesize dicType2ChannelListProtocol=_dicType2ChannelListProtocol;
@property(retain, nonatomic) NSTimer *firstTimeDelayFetchRadioTimer; // @synthesize firstTimeDelayFetchRadioTimer=_firstTimeDelayFetchRadioTimer;
@property(retain, nonatomic) NSTimer *squareRefreshTimer; // @synthesize squareRefreshTimer=_squareRefreshTimer;
@property(retain, nonatomic) NSTimer *recommandRefreshTimer; // @synthesize recommandRefreshTimer=_recommandRefreshTimer;
@property(retain, nonatomic) NSTimer *radioRefreshTimer; // @synthesize radioRefreshTimer=_radioRefreshTimer;
@property(retain, nonatomic) NSTimer *rankingRefreshTimer; // @synthesize rankingRefreshTimer=_rankingRefreshTimer;
@property(retain, nonatomic) NSTimer *channelHomeDataRefreshTimer; // @synthesize channelHomeDataRefreshTimer=_channelHomeDataRefreshTimer;
@property(retain, nonatomic) NSMutableArray *recentPlayCategoryList; // @synthesize recentPlayCategoryList=_recentPlayCategoryList;
@property(nonatomic) long long lastPlayCategoryId; // @synthesize lastPlayCategoryId=_lastPlayCategoryId;
@property(retain, nonatomic) NSDictionary *tj_tjReportInfo; // @synthesize tj_tjReportInfo=_tj_tjReportInfo;
@property(retain, nonatomic) NSDictionary *tjReportInfo; // @synthesize tjReportInfo=_tjReportInfo;
@property(retain, nonatomic) NSMutableArray *recentLitenRadio; // @synthesize recentLitenRadio=_recentLitenRadio;
@property(retain) MusicCircleFeed *requestPlayingMusicCircleObj; // @synthesize requestPlayingMusicCircleObj=_requestPlayingMusicCircleObj;
@property(retain) ForMeRecData *requestPlayingForMeObj; // @synthesize requestPlayingForMeObj=_requestPlayingForMeObj;
@property(retain) ChannelItem *requestPlayingChannelItem; // @synthesize requestPlayingChannelItem=_requestPlayingChannelItem;
@property(retain) ShareObject *requestPlayingShareObj; // @synthesize requestPlayingShareObj=_requestPlayingShareObj;
@property(nonatomic) unsigned long long qqUinByFetchRecommendData; // @synthesize qqUinByFetchRecommendData=_qqUinByFetchRecommendData;
@property(nonatomic) unsigned long long qqUinByFetchFocusItem; // @synthesize qqUinByFetchFocusItem=_qqUinByFetchFocusItem;
@property(retain) ChannelV4Category *curSelectedCategory; // @synthesize curSelectedCategory=_curSelectedCategory;
@property(retain) NSMutableArray *folderSongs; // @synthesize folderSongs=_folderSongs;
@property(retain, nonatomic) NSDictionary *radioTjReportDic; // @synthesize radioTjReportDic=_radioTjReportDic;
@property long long recordingRadioId; // @synthesize recordingRadioId=_recordingRadioId;
@property(retain) MusicListCategory *selectedCategory; // @synthesize selectedCategory=_selectedCategory;
@property(retain) NSMutableArray *guessYouLikeSongRecords; // @synthesize guessYouLikeSongRecords=_guessYouLikeSongRecords;
@property(retain) SubscribeListItem *subscribeListItem; // @synthesize subscribeListItem=_subscribeListItem;
- (void).cxx_destruct;
- (id)todayDateByFormatYYYYMMDD;
- (void)autoLoadGuessLikeRadioSongs;
- (_Bool)shouldUseLocalGuessLikeRadioCache:(long long *)arg1 cacheProtocol:(id)arg2;
- (_Bool)isShowGuessLikeRadioGroupReasonTimeout:(id)arg1;
- (_Bool)haveListenGuessLikeRadioToday;
- (_Bool)isRelistenGuessLikeRadioTimeout;
- (void)saveRecentPlayCategoryList;
- (void)uploadRecentPlayCategory:(id)arg1;
- (void)loadRecentPlayCategoryList;
- (void)addRecentPlayCategory:(id)arg1;
- (void)addRecentListenRadioCome:(id)arg1;
- (void)uploadRecentListenRadio;
- (void)saveRecentListenRadio;
- (void)loadRecentListenRadio;
- (void)cleanCachedData;
- (void)hostCallBackWithWorkProtocol:(id)arg1 protocolError:(id)arg2;
- (void)_onNotifyTaogeDarenFollowListNeedChange:(id)arg1;
- (void)_logout;
- (void)_loginSuccess;
- (id)_filePathForSongRecordOfGuessYouLikeRadio;
- (void)_saveGuessYouLikeSongRecordsToFile;
- (void)_restorGuessYouLikeSongRecordsFromFile;
- (void)_recordGuessYouLikeSongList:(id)arg1;
- (void)_playListIndexChanged:(id)arg1;
- (void)changRadioSongList;
- (id)_memCacheKeyForRadio:(long long)arg1;
- (void)safeStopRankingRefreshTimer;
- (void)safeStopRadioRefreshTimer;
- (void)safeStopSquareRefreshTimer;
- (void)restartRankingRefreshTimer:(double)arg1;
- (void)restartRadioRefreshTimer:(double)arg1;
- (void)restartRefreshTimer:(double)arg1 requestType:(unsigned long long)arg2;
- (void)restartSquareRefreshTimer:(double)arg1;
- (void)safeStopRecommandRefreshTimer;
- (void)restartRecommandRefreshTimer:(double)arg1;
- (void)_safeStopChannelHomeRefreshTimer;
- (void)_restartChannelHomeRefreshTimer:(SEL)arg1;
- (void)_postNotification:(id)arg1 data:(id)arg2;
- (void)_postChannelHomeDataDidUpdateNotification;
- (void)_postFocusItemsDidUpdateNotification;
- (void)_postAlbumIntroductionDidUpdateNotification:(id)arg1;
- (void)_postTopicChannelListDidUpdateNotification:(id)arg1;
- (void)_postRadioSongListDidUpdateNotification:(id)arg1;
- (void)postUpdateNotificationForSongList:(id)arg1 netProtocol:(id)arg2;
- (void)_postSongListDidUpdateNotification:(id)arg1 netProtocol:(id)arg2;
- (void)_postDetailSubscribeListDidUpdateNotification:(id)arg1;
- (_Bool)_subscribeListDidUpdate:(id)arg1;
- (void)_archiveDetailSubscribeListToCacheFile:(id)arg1;
- (_Bool)_restoreDetailSubscribeListFromCachedFileIfExist:(id)arg1;
- (void)_postSubscribeListDidUpdateNotification;
- (void)_archiveSubscribeListToCacheFile;
- (_Bool)_restoreSubscribeListFromCachedFileIfExist;
- (_Bool)_restoreFromiChannelFileIfExist;
- (id)_iChannelFile;
- (_Bool)_hasiChannelFile;
- (id)_generateErrorWithErrorMsg:(id)arg1 eProtocolError:(long long)arg2;
- (void)_postNotification:(id)arg1 withErrorMsg:(id)arg2 eProtocolError:(long long)arg3;
- (void)_postNotification:(id)arg1 withErrorMsg:(id)arg2 eProtocolError:(long long)arg3 raidoId:(int)arg4;
- (void)saveRadioDataToFMCache:(id)arg1 withKey:(id)arg2;
- (void)_saveDataToMemCache:(id)arg1 withKey:(id)arg2;
- (id)_fetchDataFromMemCache:(id)arg1;
- (void)_appWillTerminate;
- (id)getCategoryClusterCacheByCategoryId:(long long)arg1;
- (void)addCategoryClusterCache:(id)arg1 withCategoryId:(long long)arg2;
- (_Bool)getCategoryDetailList:(id)arg1 ByCluster:(id)arg2 QueryType:(int)arg3 ForceRefresh:(_Bool)arg4;
- (void)doFetchV4CategoryPageData:(_Bool)arg1;
- (void)delayFetchV4CategoryData:(id)arg1;
- (void)fetchV4CategoryPageData:(_Bool)arg1;
- (void)reFetchRadioData;
- (void)reFetchRankingData;
- (void)reFetchCurCategorySquareData;
- (void)delayFetchSquareDataWithObject:(id)arg1;
- (void)fetchChannelSqureData:(id)arg1 andForceRefresh:(_Bool)arg2;
- (void)reportSongListPlayAction:(id)arg1;
- (void)_playListDidChange:(id)arg1;
- (void)postReadyToPlayMusicCircleObjNotification:(id)arg1;
- (id)cacheKeyForRequestingMusicCircleObj;
- (void)requestPlayingSongListForMusicCircleObj:(id)arg1 from:(int)arg2;
- (void)postReadyToPlayForMeObjNotification:(id)arg1;
- (id)cacheKeyForRequestingForMeObj;
- (void)requestPlayingSongListForForMeObj:(id)arg1 from:(int)arg2;
- (void)postReadyToPlayShareObjNotification:(id)arg1;
- (id)cacheKeyForRequestingShareObj;
- (void)requestPlayingSongListForShareObj:(id)arg1;
- (void)postReadyToPlayChannelItemNotification:(id)arg1;
- (id)cacheKeyForRequestingChannelItem;
- (void)requestPlayingSongListForChannelItem:(id)arg1;
- (void)requestFirstReleaseSongDataForIndex:(long long)arg1;
- (id)getTaogeDarenFollowActionKey:(unsigned long long)arg1;
- (void)followTaogeDaren:(unsigned long long)arg1 andIsFollow:(_Bool)arg2;
- (id)getTaogeDarenListKey:(unsigned long long)arg1;
- (void)fetchFollowedTaogeDarenListForUser:(unsigned long long)arg1;
- (void)clearGuessYouLikeCacheData;
- (void)didReceiveMemoryWarning;
- (id)cacheKeyForRadioListOfCategory:(int)arg1;
- (void)delayFetchRadioListByCategoryId:(id)arg1;
- (void)fetchRadioListByCategoryId:(int)arg1;
- (void)delayFetchDetailChannelListByTypeData:(unsigned long long)arg1 useCache:(_Bool)arg2;
- (void)fetchDetailChannelListByType:(unsigned long long)arg1;
- (_Bool)fetchSquareDarenList:(id)arg1 loadMore:(_Bool)arg2 form:(int)arg3;
- (_Bool)fetchCategoricalSongFolderList:(id)arg1 loadMore:(_Bool)arg2 from:(int)arg3;
- (void)delayFetchRadioCategories;
- (void)fetchRadioCategories;
- (void)getCategoriesDataWhenLogin;
- (void)fetchSquareCategories;
- (void)fetchMusicListCategories;
- (id)generateChannelHomeData;
- (void)delayFetchFocusData:(id)arg1;
- (_Bool)hasCacheDataForFocusItems;
- (void)fetchFocusItems:(_Bool)arg1;
- (void)fetchFocusItems;
- (_Bool)hasCacheDataForAlbumIntroduction:(id)arg1;
- (void)fetchAlbumIntroduction:(id)arg1;
- (void)doFetchV4RecommendPageData:(_Bool)arg1;
- (void)doFetchV4RecommendPageDataForce;
- (void)delayFetchV4RecommendData:(id)arg1;
- (void)fetchV4RecommendPageData:(_Bool)arg1;
- (void)fetchV4RecommendPageData;
- (_Bool)hasNextPageForTopicChannelList:(id)arg1;
- (_Bool)hasCacheDataForTopicChannelList:(id)arg1;
- (void)fetchTopicChannelList:(id)arg1 loadMore:(_Bool)arg2 channelItem:(id)arg3;
- (void)saveCacheData:(id)arg1 forRadioSongList:(int)arg2;
- (_Bool)hasCacheDataForRadioSongList:(int)arg1;
- (_Bool)removeSongFromHistory:(id)arg1;
- (id)firstThreeFolderSongsInRadioList;
- (void)radioCategoriesDataDidUpdate:(id)arg1;
- (_Bool)isFMRadio:(int)arg1;
- (id)listBaseInILikeRadio;
- (void)fetchRadioSongList:(int)arg1 refresh:(_Bool)arg2;
- (void)fetchRadioSongList:(int)arg1 refresh:(_Bool)arg2 callBack:(CDUnknownBlockType)arg3 abandonedGroupId:(int)arg4 preload:(_Bool)arg5;
- (void)fetchRadioSongList:(int)arg1 refresh:(_Bool)arg2 callBack:(CDUnknownBlockType)arg3;
- (id)createRadioProtocolByRadioId:(int)arg1 abandonedGroupId:(int)arg2 preload:(_Bool)arg3;
- (void)handleRadioProtocolFinish:(id)arg1 protocolError:(id)arg2;
- (_Bool)hasNextPageForSongList:(id)arg1;
- (_Bool)hasCacheDataForSongList:(id)arg1;
- (void)fetchSongList:(id)arg1 loadMore:(_Bool)arg2 channelItemKey:(id)arg3 from:(int)arg4 forceRefresh:(_Bool)arg5;
- (void)fetchSongList:(id)arg1 loadMore:(_Bool)arg2 channelItemKey:(id)arg3 from:(int)arg4 forceRefresh:(_Bool)arg5 requestType:(long long)arg6;
- (void)removeSongListCache:(id)arg1;
- (Class)_getTopicChannelProtocolClass:(id)arg1;
- (Class)_getChannelInfoProtocolClass:(id)arg1;
- (_Bool)cleanAllCachedChannelData;
- (_Bool)hasCacheDataForDetailSubscribeList:(id)arg1;
- (void)fetchDetailSubscribeList:(id)arg1;
- (_Bool)hasCacheDataForSubscribeList;
- (void)fetchMainSubscribeList;
- (void)archiveiChannelFile;
- (_Bool)channelsDidUpdatedForUin:(unsigned long long)arg1;
- (void)awake;
- (id)getSonglistFromFolderInfo:(id)arg1;
- (void)removeLatestFavBySelf:(id)arg1;
- (void)onNotifyVipPurchaseSuccess:(id)arg1;
- (id)init;
- (void)dealloc;

@end

